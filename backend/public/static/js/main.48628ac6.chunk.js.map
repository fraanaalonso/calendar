{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/NavBar.js","helpers/calendar-messages-espa√±ol.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","placeholder","onChange","console","log","msg","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","event","cleanActiveNote","eventUpdated","eventDeleted","eventLoaded","NavBar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","clone","initEvent","notes","endForm","CalendarModal","dateStart","setdateStart","active","calendar","endDate","setendDate","titleValid","settitleValid","formValues","setFormValues","modalOpen","ui","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","trim","length","id","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onSelectEvent","onView","onSelectSlot","selectable","view","onDoubleClickEvent","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48628ac6.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL\r\n\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method='GET' ) => {\r\n\r\n    const url = `${ baseURL }/${ endpoint }`; //localhost:4000/api/auth\r\n\r\n    if( method === 'GET'){\r\n        return fetch( url );\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst fetchWithToken = ( endpoint, data, method='GET' ) => {\r\n\r\n    const url = `${ baseURL }/${ endpoint }`; //localhost:4000/api/auth\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET'){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","export const types = {\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventStartAddNew: '[event] Start Add New',\r\n    eventAddNew: '[event] Add New event',\r\n    eventSetActive: '[event] Set Active Event',\r\n    eventClearActive: '[event] Clear Active Note',\r\n    eventUpdated: '[event] Event Updated',\r\n    eventDeleted : '[event] Event Deleted',\r\n    eventLoaded: '[event] Events Loaded',\r\n    eventLogOut: '[event] Event LogOut',\r\n\r\n    //Authentication\r\n\r\n    authCheckingFinish: '[Auth] Finish Checking Login State',\r\n    authStartLogin: '[Auth] Start Login',\r\n    authLogin: '[Auth] Login',\r\n    authStartRegister: '[Auth] Start Register',\r\n    authStartTokenRenew: '[Auth] Start Token Renew',\r\n    authLogout: '[Auth] Logout'\r\n\r\n}","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp =  await fetchWithoutToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                }) ) \r\n        }else{\r\n            Swal.fire('Error', 'Email o Password incorrectos', 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithoutToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        console.log( body )\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) ) \r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch)=> {\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) ) \r\n        }else{\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogOut = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from \"react\"\r\n\r\n//Recibe un objeto y manipulo sus propiedades modificando el estado\r\nexport const useForm = ( initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport '../../styles/components/login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'fraanaalonso@email.es',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Puri',\r\n        rEmail: 'puriaalonso@email.es',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n\r\n        if( rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Passwords do not match', 'error');\r\n        }\r\n\r\n        dispatch( startRegister(rEmail, rPassword1, rName ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contrase√±a\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={ handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={ handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contrase√±a\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={ handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contrase√±a\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={ handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" \r\n                                />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    )\r\n}","import { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\nimport Swal from 'sweetalert2'\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n        try{\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n\r\n            if( body.ok ){\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log( event )\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n        }catch( error ){\r\n            console.log('ERROR');\r\n        }\r\n        \r\n\r\n    } \r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const cleanActiveNote = () => ({\r\n    type: types.eventClearActive\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const resp = await fetchWithToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch( eventUpdated( event ) );\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        }catch( error ){\r\n            console.log( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( e ) => ({\r\n    type: types.eventUpdated,\r\n    payload: e\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) =>{\r\n        const { id } = getState().calendar.active;\r\n        try{\r\n            const resp = await fetchWithToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                dispatch(eventDeleted());\r\n            }\r\n            else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n           \r\n        }catch( error ){\r\n           console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.events);\r\n            console.log( events );\r\n            dispatch( eventLoaded( events ));\r\n        }catch( error ){\r\n            console.log( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogOutPurge = () => ({\r\n    type: types.eventLogOut\r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogOut } from '../../actions/auth'\r\nimport { eventLogOutPurge } from '../../actions/events'\r\nexport const NavBar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const handleLogOut = () => {\r\n        dispatch( startLogOut() );\r\n        dispatch( eventLogOutPurge() );\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogOut}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el d√≠a',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'D√≠a',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver m√°s (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n\r\n    return (\r\n    \r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\n//import Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { cleanActiveNote, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst end = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    endForm: end.toDate()\r\n\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n   const [dateStart, setdateStart] = useState(now.toDate());\r\n   const {active} = useSelector(state => state.calendar)\r\n   const [endDate, setendDate] = useState( end.toDate() )\r\n   const [titleValid, settitleValid] = useState(true)\r\n   const [formValues, setFormValues] = useState( initEvent );\r\n   const {modalOpen} = useSelector(state => state.ui)\r\n   const dispatch = useDispatch()\r\n   const { notes, title } = formValues;\r\n\r\n   useEffect(() => {\r\n       if( active ){\r\n           setFormValues( active );\r\n       }else{\r\n           setFormValues( initEvent );\r\n       }\r\n   }, [ active, setFormValues ]);\r\n\r\n\r\n   const handleInputChange = ( e ) => {\r\n       setFormValues({\r\n           ...formValues,\r\n           [e.target.name]: e.target.value\r\n       })\r\n   }\r\n\r\n  \r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(cleanActiveNote());\r\n        setFormValues( initEvent );// we reset the form\r\n\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setdateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setendDate( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n        //const momentStart = moment( start );\r\n        //const momentEnd = moment( endForm );\r\n\r\n        \r\n\r\n        if( title.trim().length < 2 ){\r\n            settitleValid( false );\r\n        }\r\n\r\n        //cuando edito un evento, el active pasa a contener dicho evento. Si a√±ado, eso no ocurre\r\n\r\n        if( active ){\r\n            dispatch( eventStartUpdate(formValues) );\r\n        }\r\n        else{\r\n\r\n            dispatch( eventStartAddNew(formValues))\r\n    \r\n            \r\n\r\n        }\r\n\r\n        settitleValid(true);\r\n        closeModal();\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n                <h1> { ( active ) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n                    <hr />\r\n                    <form \r\n                        className=\"container\"\r\n                        onSubmit={ handleSubmitForm}\r\n                    >\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Fecha y hora inicio</label>\r\n                            <DateTimePicker\r\n                                onChange={handleStartDateChange}\r\n                                value={dateStart}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Fecha y hora fin</label>\r\n                            <DateTimePicker\r\n                                onChange={handleEndDateChange}\r\n                                value={endDate}\r\n                                minDate={ dateStart }\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n\r\n                        <hr />\r\n                        <div className=\"form-group\">\r\n                            <label>Titulo y notas</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className={`form-control ${ !titleValid && 'is-invalid' } `}\r\n                                placeholder=\"T√≠tulo del evento\"\r\n                                name=\"title\"\r\n                                autoComplete=\"off\"\r\n                                value={ title }\r\n                                onChange = { handleInputChange }\r\n                            />\r\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <textarea \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                placeholder=\"Notas\"\r\n                                rows=\"5\"\r\n                                name=\"notes\"\r\n                                value={ notes }\r\n                                onChange = { handleInputChange }\r\n                            ></textarea>\r\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Informaci√≥n adicional</small>\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-outline-primary btn-block\"\r\n                        >\r\n                            <i className=\"far fa-save\"></i>\r\n                            <span> Guardar</span>\r\n                        </button>\r\n\r\n                    </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleOpenModal = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n        >\r\n        <i \r\n            className=\"fas fa-plus\"\r\n            onClick={ handleOpenModal }\r\n        ></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento</span>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es';\r\nimport { NavBar } from '../ui/NavBar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-espa√±ol';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { cleanActiveNote, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month')\r\n    const dispatch = useDispatch();\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [ dispatch ]);\r\n\r\n    //read events store\r\n\r\n    const { events, active } = useSelector(state => state.calendar);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const onSelect = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( cleanActiveNote() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\" \r\n                events={events}\r\n                messages={messages}\r\n                eventPropGetter={ eventStyleGetter}\r\n                onSelectEvent={ onSelect}\r\n                onView={ onViewChange }\r\n                onSelectSlot = { onSelectSlot}\r\n                selectable={ true }\r\n                view={ lastView }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                components = {{\r\n                    event: CalendarEvent \r\n                }}\r\n               \r\n            />\r\n\r\n            <AddNewFab />\r\n            \r\n            {\r\n                active && <DeleteEventFab />\r\n            }\r\n            \r\n            \r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({ \r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={\r\n                (props) => (\r\n                    isLoggedIn\r\n                    ?\r\n                    (<Component {...props} />)\r\n                    :\r\n                    (<Redirect to=\"/login\" />)\r\n                )\r\n            }\r\n        \r\n        />\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={\r\n                (props) => (\r\n                    (!isLoggedIn)\r\n                    ?\r\n                    (<Component {...props} />)\r\n                    :\r\n                    (<Redirect to=\"/\" />)\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Redirect} from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n   \r\n    useEffect(() => {\r\n        dispatch( startChecking());\r\n    }, [ dispatch ]);\r\n\r\n    if( checking ){\r\n        return <h5>Espere...</h5>\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            exact path=\"/login\" \r\n                            component={LoginScreen}\r\n                            isLoggedIn={ !!uid } \r\n                        />\r\n                        <PrivateRoute \r\n                            exact path=\"/\" \r\n                            component={CalendarScreen} \r\n                            isLoggedIn={ !!uid } \r\n                            />\r\n\r\n                        <Redirect to='/' />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nexport const authReducer = (state =initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from \"../types/types\";\r\n/*\r\n{\r\n    id: 'bjhdbcjhbefdhj',\r\n    title: 'Cumplea√±os Francisco',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hour').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar la tarta',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Fran'\r\n    }\r\n},*/\r\n\r\nconst initialState = {\r\n    events: [\r\n        \r\n\r\n    ],\r\n    active: null\r\n}\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                active: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                active: null\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.active.id)\r\n                ),\r\n                active: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogOut:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n\r\n        return {\r\n            ...state,\r\n            modalOpen: false\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    \r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles/styles.css'\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}